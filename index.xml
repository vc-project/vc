<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual Computing</title><link>https://vc-project.github.io/vc/</link><description>Recent content in Introduction on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vc-project.github.io/vc/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://vc-project.github.io/vc/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://vc-project.github.io/vc/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://vc-project.github.io/vc/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://vc-project.github.io/vc/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/framework/buttons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/framework/buttons/</guid><description>Buttons # Buttons are styled links that can lead to local page or external link.
Example # {{&amp;lt; button relref=&amp;#34;/&amp;#34; [class=&amp;#34;...&amp;#34;] &amp;gt;}}Get Home{{&amp;lt; /button &amp;gt;}} {{&amp;lt; button href=&amp;#34;https://github.com/alex-shpak/hugo-book&amp;#34; &amp;gt;}}Contribute{{&amp;lt; /button &amp;gt;}} Get Home Contribute</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/framework/columns/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/framework/columns/</guid><description>Columns # Columns help organize shorter pieces of content horizontally for readability.
{{&amp;lt; columns &amp;gt;}} &amp;lt;!-- begin columns block --&amp;gt; # Left Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Mid Content Lorem markdownum insigne... &amp;lt;---&amp;gt; &amp;lt;!-- magic separator, between columns --&amp;gt; # Right Content Lorem markdownum insigne... {{&amp;lt; /columns &amp;gt;}} Example # Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter!</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/framework/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/framework/details/</guid><description>Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.
Example # {{&amp;lt; details &amp;#34;Title&amp;#34; [open] &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} {{&amp;lt; details title=&amp;#34;Title&amp;#34; open=true &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /details &amp;gt;}} Title Markdown content # Lorem markdownum insigne&amp;hellip;</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/framework/expand/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/framework/expand/</guid><description>Expand # Expand shortcode can help to decrease clutter on screen by hiding part of text. Expand content by clicking on it.
Example # Default # {{&amp;lt; expand &amp;gt;}} ## Markdown content Lorem markdownum insigne... {{&amp;lt; /expand &amp;gt;}} Expand ↕ Markdown content Lorem markdownum insigne&amp;hellip; With Custom Label # {{&amp;lt; expand &amp;#34;Custom Label&amp;#34; &amp;#34;...&amp;#34; &amp;gt;}} ## Markdown content Lorem markdownum insigne.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/framework/hints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/framework/hints/</guid><description>Hints # Hint shortcode can be used as hint/alerts/notification block.
There are 3 colors to choose: info, warning and danger.
{{&amp;lt; hint [info|warning|danger] &amp;gt;}} **Markdown content** Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa {{&amp;lt; /hint &amp;gt;}} Example # Markdown content
Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa Markdown content</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/framework/katex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/framework/katex/</guid><description>KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example # {{&amp;lt; katex [display] [class=&amp;#34;text-center&amp;#34;] &amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt; /katex &amp;gt;}} \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Display Mode Example # Here is some inline example: \(\pi(x)\) , rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Text continues here.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/framework/mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/framework/mermaid/</guid><description>Mermaid Chart # MermaidJS is library for generating svg charts and diagrams from text.
Override Mermaid Initialization Config
To override the initialization config for Mermaid, create a mermaid.json file in your assets folder!
Example # {{&amp;lt; mermaid [class=&amp;#34;text-center&amp;#34;]&amp;gt;}} stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --&amp;gt; State2 note left of State2 : This is the note to the left.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/framework/tabs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/framework/tabs/</guid><description>Tabs # Tabs let you organize content by context, for example installation instructions for each supported platform.
{{&amp;lt; tabs &amp;#34;uniqueid&amp;#34; &amp;gt;}} {{&amp;lt; tab &amp;#34;MacOS&amp;#34; &amp;gt;}} # MacOS Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Linux&amp;#34; &amp;gt;}} # Linux Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; tab &amp;#34;Windows&amp;#34; &amp;gt;}} # Windows Content {{&amp;lt; /tab &amp;gt;}} {{&amp;lt; /tabs &amp;gt;}} Example # MacOS MacOS # This is tab MacOS content.
Lorem markdownum insigne. Olympo signis Delphis!</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/illusions/Concentric-Rectangle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/illusions/Concentric-Rectangle/</guid><description>Concentric rectangle # The illusion consist of a concentric rectangle whic rotates in the center of the canvas consecutively. A concentric rectangle share the center with the canvas, and, with a rotation rate, rotate until it has an effect of an spiral in the canvas.
Applications # A possible appplication of this effect can be, in addition to sam the visual system, in research about the behaviour of the human visualization in specific conditions and image processing.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/illusions/HermannGrid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/illusions/HermannGrid/</guid><description>Hermann Grid # The Hermann grid illusion is an optical illusion reported by Ludimar Hermann in 1870. The illusion is characterized by &amp;ldquo;ghostlike&amp;rdquo; grey blobs perceived at the intersections of a white (or light-colored) grid on a black background. The grey blobs disappear when looking directly at an intersection.
Illusion # Ludimar Hermann, a German physiologist, discovered this illusion reading a physics text in which the figures were printed in a matrix-like arrengement.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/illusions/Pinna-Illusion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/illusions/Pinna-Illusion/</guid><description>Pinna illusions # Pinna illusions encomposses various optical ilusions discovered by Dr. Baingio Pinna. We are gonna focus here on just two of them, composed by identical squares positioned in circular orbits around the center of the image. The position and shading of the squares creates the perception of spiraling orbits in the first one and in the second one the illusion of movement.
Pinna&amp;rsquo;s intertwining illusion # One can see an array of squares in a seemingly spiraling position.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/illusions/Zollner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/illusions/Zollner/</guid><description>Zöllner Illusion # This illusion belongs to a family of illusions called geometrical-optical illusions. In these illusions some objects appear distorted in virtue of other aspects of the image and their geometrical properties as length, straightness, or parallelism are not correctly perceived.
The illusion consists of a series of parallel, diagonal lines which are crossed by short lines. The direction of the crossing lines alternate between horizontal and vertical. The created optical effect gets the observer to think that the diagonal lines are not parallel, but indeed they are.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/p5/div/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/p5/div/</guid><description>p5 div shortcodes embed p5.js code within a div element. There are two p5 div shortcodes: p5-div and p5-instance-div.
p5-div # {{&amp;lt; p5-div ver=&amp;#34;1.4.0&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Scintillating grid # Look at this and also this among many more references there are.
p5-div markdown {{&amp;lt; p5-div sketch=&amp;#34;/vc/sketches/scintillating.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/p5/iframe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/p5/iframe/</guid><description>p5 iframe shortcodes embed p5.js code within an iframe element. There are two p5 iframe shortcodes: p5-iframe and p5-global-iframe.
p5-iframe # {{&amp;lt; p5-iframe ver=&amp;#34;1.4.0&amp;#34; sketch=&amp;#34;/path/to/sketch.js&amp;#34; lib1=&amp;#34;https://cdntolib1/lib1.js&amp;#34; width=&amp;#34;800&amp;#34; height=&amp;#34;600&amp;#34; &amp;gt;}} All parameters are optional but sketch. Default values are shown in the above snippet but for libs*. Up to lib5 libs may be specified.
Color relativity # Look at this brief explanation about what color relativity is.
p5-iframe markdown {{&amp;lt; p5-iframe sketch=&amp;#34;/vc/sketches/colors.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/rendering/Rasterization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/rendering/Rasterization/</guid><description>Rasterization # It is a process to make a correct vector to raster conversion in an image form sense. Vectorial images consist of several lines, paths and shapes in a 2D or 3D environment that are defined mathematically to describe objects and scenes. A raster image uses a bitmap or set of pixels in the form of a grid or matrix to represent an image. Rasterization is important because pixel format is the format used in digital output image devices.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/rendering/Visibility-Algo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/rendering/Visibility-Algo/</guid><description/></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/rendering/Visibility/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/rendering/Visibility/</guid><description>Visibility Alghoritms # Ray tracing # Introduction # The videogames world has undergone a huge evolution in the last years. It has been posible by the GPUs, the central component on which have been built. In the present, Ray tracing was here, but this technology is very demanding.The graphic boards like RTX 3090 and RX 6900 cant give the correct shape in the geometry level with the ray tracing method.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/shaders/Hardware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/shaders/Hardware/</guid><description>Hardware # "</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/shaders/shaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/shaders/shaders/</guid><description>Shaders # Image Processing # Image processing means processing digital image by means of a digital computer. The target of this is extract useful information using computer alghoritms. An image is defined as two-dimensional function, F(x,y), where x and y are spatial coordinates, and amplitude values of F are finite. Digital image is composed of a finite number of elements have a particular value in a particular location. These elements are referred like pixels.</description></item><item><title/><link>https://vc-project.github.io/vc/docs/shortcodes/shaders/VideoBySoftware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vc-project.github.io/vc/docs/shortcodes/shaders/VideoBySoftware/</guid><description>Software # "</description></item></channel></rss>